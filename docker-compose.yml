services:
  apache:
    image: httpd:latest
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html # Mount the entire Laravel project
      - ./public:/var/www/html/public # Explicitly mount the public directory
      - ./apache-config/httpd.conf:/usr/local/apache2/conf/httpd.conf
    depends_on:
      - php
    networks:
      - webapp-network

  php:
    container_name: php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - .:/var/www/html/
    networks:
      - webapp-network
    environment:
      - PHP_FPM_LISTEN=0.0.0.0:9000
      - PHP_ERROR_REPORTING=E_ALL

  node:
    image: node:18
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    command: >
      bash -c "npm install
      && npm run build
      && npm run dev"
    networks:
      - webapp-network
    ports:
      - "5173:5173"
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ariq12345    # Password for root user
      MYSQL_DATABASE: serverpulse_db    # Database will be created on startup
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - webapp-network

  phpmyadmin:
    image: phpmyadmin:apache
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ariq12345    # Should match MYSQL_ROOT_PASSWORD above
      UPLOAD_LIMIT: 64M
    depends_on:
      - mysql
    networks:
      - webapp-network

  # Scheduler Service
  scheduler:
    image: php:8.2-fpm
    volumes:
      - .:/var/www/html
    networks:
      - webapp-network
    command: >
      bash -c "apt-get update && apt-get install -y 
      libzip-dev git unzip
      && docker-php-ext-install pdo pdo_mysql zip opcache
      && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      && cd /var/www/html 
      && composer install --no-interaction
      && php artisan config:cache
      && while true; do php artisan schedule:run --verbose; sleep 60; done"
    depends_on:
      - mysql
      - php

  # Queue Worker Service
  queue:
    image: php:8.2-fpm
    volumes:
      - .:/var/www/html
    networks:
      - webapp-network
    command: >
      bash -c "apt-get update && apt-get install -y \
      libzip-dev git unzip procps \
      && docker-php-ext-install pdo pdo_mysql zip opcache \
      && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
      && cd /var/www/html \
      && composer install --no-interaction \
      && php artisan queue:work --sleep=3 --tries=3"
    depends_on:
      - mysql
      - php

volumes:
  mysql_data:

networks:
  webapp-network:
    driver: bridge