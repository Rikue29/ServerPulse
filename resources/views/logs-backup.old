@extends('layouts.app')

@section('content')
<div x-data="logsPage()" x-init="init()" class="min-h-screen bg-gray-50">
    <style>
        .glass-effect {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Include Sidebar Navigation -->
    @include('layouts.navigation')
    
    <!-- Main Content with Sidebar Margin -->
    <div class="sidebar-margin min-h-screen">
        <!-- Header -->
        <div class="bg-white border-b border-gray-200 px-6 py-4">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-2xl font-semibold text-gray-900">System Logs</h1>
                    <p class="text-sm text-gray-500 mt-1">Monitor and analyze system events and activities</p>
                </div>
                <div class="flex items-center space-x-2">
                    <div class="flex items-center text-sm text-green-600">
                        <div class="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></div>
                        Live updates enabled
                    </div>
                    <button class="p-2 text-gray-400 hover:text-gray-600 rounded-lg">
                        <i class="fas fa-filter"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Content Area -->
        <div class="p-6" x-data="logsPage()">            <!-- Stats Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
                <!-- Total Logs -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500">Total Logs</p>
                            <p class="text-2xl font-bold text-gray-900" x-text="filteredLogs.length">{{ $logs->total() }}</p>
                        </div>
                        <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                            <i class="fas fa-list text-blue-600"></i>
                        </div>
                    </div>
                </div>

                <!-- Critical Alerts -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500">Critical</p>
                            <p class="text-2xl font-bold text-red-600">{{ $logs->where('level', 'error')->count() }}</p>
                        </div>
                        <div class="w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center">
                            <i class="fas fa-exclamation-triangle text-red-600"></i>
                        </div>
                    </div>
                </div>

                <!-- Warnings -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500">Warning</p>
                            <p class="text-2xl font-bold text-yellow-600">{{ $logs->where('level', 'warning')->count() }}</p>
                        </div>
                        <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                            <i class="fas fa-exclamation-circle text-yellow-600"></i>
                        </div>
                    </div>
                </div>

                <!-- Info -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500">Info</p>
                            <p class="text-2xl font-bold text-blue-600">{{ $logs->where('level', 'info')->count() }}</p>
                        </div>
                        <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                            <i class="fas fa-info-circle text-blue-600"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Logs Table -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-200">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-medium text-gray-900">Recent Logs</h3>
                        <div class="flex items-center space-x-2">
                            <span class="text-sm text-gray-500">Rows per page:</span>
                            <select class="border border-gray-300 rounded-md px-2 py-1 text-sm">
                                <option>10</option>
                                <option selected>50</option>
                                <option>100</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Timestamp
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Type
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Server
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Status
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Message
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <template x-for="log in paginatedLogs" :key="log.id">
                                <tr class="hover:bg-gray-50 transition-colors duration-200">
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" x-text="log.created_at"></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" x-text="log.type"></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" x-text="log.server"></td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full"
                                              :class="{
                                                  'bg-red-100 text-red-800': log.level === 'error',
                                                  'bg-yellow-100 text-yellow-800': log.level === 'warning',
                                                  'bg-blue-100 text-blue-800': log.level === 'info'
                                              }"
                                              x-text="log.level"></span>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-900" x-text="log.message.substring(0, 80) + '...'"></td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <a :href="'/logs/' + log.id" class="text-blue-600 hover:text-blue-900">
                                            View Details
                                        </a>
                                    </td>
                                </tr>
                            </template>
                            
                            @if($logs->isEmpty())
                            <tr>
                                <td colspan="6" class="px-6 py-12 text-center text-gray-500">
                                    <div class="flex flex-col items-center">
                                        <i class="fas fa-inbox text-4xl text-gray-300 mb-4"></i>
                                        <p class="text-lg font-medium">No logs found</p>
                                        <p class="text-sm">Run the monitoring command to generate logs</p>
                                    </div>
                                </td>
                            </tr>
                            @else
                            @foreach($logs as $log)
                            <tr class="hover:bg-gray-50 transition-colors duration-200" style="display: none;" data-log-item>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    {{ $log->created_at->format('M d, Y H:i:s') }}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if(str_contains($log->message, 'CPU'))
                                        CPU Spike
                                    @elseif(str_contains($log->message, 'Memory') || str_contains($log->message, 'RAM'))
                                        Memory Usage
                                    @elseif(str_contains($log->message, 'Disk'))
                                        Disk Usage
                                    @elseif(str_contains($log->message, 'Load'))
                                        Load Average
                                    @else
                                        System Update
                                    @endif
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    {{ $log->server ? $log->server->name : 'Unknown' }}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if($log->level === 'error')
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800">
                                            Critical
                                        </span>
                                    @elseif($log->level === 'warning')
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                            Warning
                                        </span>
                                    @else
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-blue-100 text-blue-800">
                                            Info
                                        </span>
                                    @endif
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-900">
                                    {{ Str::limit($log->message, 80) }}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a href="{{ route('logs.show', $log) }}" class="text-blue-600 hover:text-blue-900">
                                        View Details
                                    </a>
                                </td>
                            </tr>
                            @endforeach
                            @endif
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if($logs->hasPages())
                <div class="px-6 py-4 border-t border-gray-200">
                    <div class="flex items-center justify-between">
                        <div class="text-sm text-gray-500">
                            Showing {{ $logs->firstItem() }} to {{ $logs->lastItem() }} of {{ $logs->total() }} results
                        </div>
                        <div class="flex space-x-2">
                            @if($logs->onFirstPage())
                                <span class="px-3 py-2 text-sm text-gray-400 border border-gray-300 rounded-md">Previous</span>
                            @else
                                <a href="{{ $logs->previousPageUrl() }}" class="px-3 py-2 text-sm text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50">Previous</a>
                            @endif
                            
                            <span class="px-3 py-2 text-sm text-blue-600 border border-blue-300 rounded-md bg-blue-50">
                                Page {{ $logs->currentPage() }} of {{ $logs->lastPage() }}
                            </span>
                            
                            @if($logs->hasMorePages())
                                <a href="{{ $logs->nextPageUrl() }}" class="px-3 py-2 text-sm text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50">Next</a>
                            @else
                                <span class="px-3 py-2 text-sm text-gray-400 border border-gray-300 rounded-md">Next</span>
                            @endif
                        </div>
                    </div>
                </div>
                @endif
            </div>
        </div>
    </div>

    <script>
        function logsPage() {
            return {
                searchQuery: '',
                selectedLevel: '',
                selectedServer: '',
                filteredLogs: @json($logs->items()),
                allLogs: @json($logs->items()),
                currentPage: 1,
                perPage: 10,
                
                init() {
                    this.filterLogs();
                },
                
                filterLogs() {
                    let filtered = this.allLogs;
                    
                    // Filter by search query
                    if (this.searchQuery) {
                        filtered = filtered.filter(log => 
                            log.message.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
                            (log.server && log.server.name.toLowerCase().includes(this.searchQuery.toLowerCase()))
                        );
                    }
                    
                    // Filter by level
                    if (this.selectedLevel) {
                        filtered = filtered.filter(log => log.level === this.selectedLevel);
                    }
                    
                    // Filter by server
                    if (this.selectedServer) {
                        filtered = filtered.filter(log => log.server_id == this.selectedServer);
                    }
                    
                    this.filteredLogs = filtered;
                    this.currentPage = 1;
                    
                    // Hide/show table rows for server-side pagination compatibility
                    const tableRows = document.querySelectorAll('[data-log-item]');
                    tableRows.forEach(row => {
                        row.style.display = 'none';
                    });
                    
                    // Show matching rows
                    filtered.forEach(log => {
                        const row = document.querySelector(`[data-log-item]:nth-child(${this.allLogs.indexOf(log) + 1})`);
                        if (row) {
                            row.style.display = '';
                        }
                    });
                },
                
                get paginatedLogs() {
                    const start = (this.currentPage - 1) * this.perPage;
                    const end = start + this.perPage;
                    return this.filteredLogs.slice(start, end);
                }
            }
        }
        
        // Auto-refresh every 30 seconds
        setInterval(() => {
            location.reload();
        }, 30000);
    </script>
</body>
</html>
            }
        }
        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        @keyframes slideInFromLeft {
            from {
                opacity: 0;
                transform: translateX(-30px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
        .fade-in-up {
            animation: fadeInUp 0.5s ease-out;
        }
        .slide-in-left {
            animation: slideInFromLeft 0.6s ease-out;
        }
        .card-hover {
            transition: all 0.3s ease;
        }
        .card-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .level-badge {
            position: relative;
            overflow: hidden;
        }
        .level-badge::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            transition: left 0.5s;
        }
        .level-badge:hover::before {
            left: 100%;
        }
        .search-container {
            position: relative;
        }
        .search-container::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: width 0.3s ease;
        }
        .search-container:focus-within::after {
            width: 100%;
        }
        .modern-table-row {
            transition: all 0.2s ease;
            border-left: 3px solid transparent;
        }
        .modern-table-row:hover {
            background: linear-gradient(90deg, rgba(102, 126, 234, 0.05), rgba(255, 255, 255, 1));
            border-left-color: #667eea;
            transform: scale(1.01);
        }
        .loading-skeleton {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: loading 1.5s infinite;
        }
        @keyframes loading {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">    <!-- Header -->
    <header class="gradient-bg shadow-lg relative overflow-hidden">
        <!-- Background pattern -->
        <div class="absolute inset-0 opacity-10">
            <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 20px 20px;"></div>
        </div>
        
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
            <div class="flex justify-between items-center py-6">
                <div class="flex items-center space-x-4">
                    <div class="flex items-center space-x-3">
                        <div class="w-12 h-12 bg-white rounded-xl flex items-center justify-center shadow-lg transform hover:scale-110 transition-transform duration-300">
                            <i class="fas fa-server text-primary-600 text-xl"></i>
                        </div>
                        <div>
                            <h1 class="text-3xl font-bold text-white">ServerPulse</h1>
                            <p class="text-blue-100 text-sm flex items-center">
                                <i class="fas fa-chart-line mr-1"></i>
                                Real-time Server Monitoring Dashboard
                            </p>
                        </div>
                    </div>
                </div>
                
                <div class="flex items-center space-x-6">
                    <!-- Live Status Indicator -->
                    <div class="flex items-center space-x-3 bg-white bg-opacity-10 rounded-xl px-4 py-2 backdrop-blur-sm">
                        <div class="flex items-center space-x-2 text-white">
                            <div class="w-3 h-3 bg-green-400 rounded-full pulse-animation shadow-lg"></div>
                            <span class="text-sm font-medium">Live Monitoring</span>
                        </div>
                        <div class="text-white text-xs opacity-75">
                            {{ $logs->count() }} logs
                        </div>
                    </div>
                    
                    <!-- Navigation Links -->
                    <nav class="hidden md:flex items-center space-x-1">
                        <a href="{{ route('dashboard') }}" class="text-white hover:bg-white hover:bg-opacity-20 px-3 py-2 rounded-lg transition-all duration-200 text-sm">
                            <i class="fas fa-tachometer-alt mr-1"></i>Dashboard
                        </a>
                        <a href="{{ route('servers.index') }}" class="text-white hover:bg-white hover:bg-opacity-20 px-3 py-2 rounded-lg transition-all duration-200 text-sm">
                            <i class="fas fa-server mr-1"></i>Servers
                        </a>
                        <a href="{{ route('logs.index') }}" class="bg-white bg-opacity-20 text-white px-3 py-2 rounded-lg text-sm font-medium">
                            <i class="fas fa-list-alt mr-1"></i>Logs
                        </a>
                    </nav>
                    
                    <!-- Settings Button -->
                    <button class="bg-white bg-opacity-20 text-white px-4 py-2 rounded-xl hover:bg-opacity-30 transition-all duration-300 backdrop-blur-sm shadow-lg hover:shadow-xl transform hover:scale-105">
                        <i class="fas fa-cog mr-2"></i>Settings
                    </button>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 fade-in-up card-hover">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Total Logs</p>
                        <p class="text-3xl font-bold text-gray-900 slide-in-left">{{ $logs->total() ?? 0 }}</p>
                        <p class="text-xs text-green-600 mt-1">
                            <i class="fas fa-arrow-up mr-1"></i>
                            12% from last hour
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-gradient-to-br from-blue-400 to-blue-600 rounded-xl flex items-center justify-center shadow-lg">
                        <i class="fas fa-file-alt text-white text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 fade-in-up card-hover" style="animation-delay: 0.1s">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Critical Issues</p>
                        <p class="text-3xl font-bold text-red-600 slide-in-left">{{ $logs->where('level', 'critical')->count() }}</p>
                        <p class="text-xs text-red-600 mt-1">
                            <i class="fas fa-exclamation-triangle mr-1 pulse-animation"></i>
                            Requires attention
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-gradient-to-br from-red-400 to-red-600 rounded-xl flex items-center justify-center shadow-lg">
                        <i class="fas fa-exclamation-triangle text-white text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 fade-in-up card-hover" style="animation-delay: 0.2s">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Warnings</p>
                        <p class="text-3xl font-bold text-yellow-600 slide-in-left">{{ $logs->where('level', 'warning')->count() }}</p>
                        <p class="text-xs text-yellow-600 mt-1">
                            <i class="fas fa-clock mr-1"></i>
                            Monitor closely
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-gradient-to-br from-yellow-400 to-yellow-600 rounded-xl flex items-center justify-center shadow-lg">
                        <i class="fas fa-exclamation-circle text-white text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 fade-in-up card-hover" style="animation-delay: 0.3s">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Servers Online</p>
                        <p class="text-3xl font-bold text-green-600 slide-in-left">{{ $servers->count() }}</p>
                        <p class="text-xs text-green-600 mt-1">
                            <i class="fas fa-heartbeat mr-1 pulse-animation"></i>
                            All systems operational
                        </p>
                    </div>
                    <div class="w-12 h-12 bg-gradient-to-br from-green-400 to-green-600 rounded-xl flex items-center justify-center shadow-lg">
                        <i class="fas fa-check-circle text-white text-xl"></i>
                    </div>
                </div>
            </div>
        </div>        <!-- Filters and Search -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-8 fade-in-up card-hover" style="animation-delay: 0.4s">
            <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
                <div class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
                    <div class="relative search-container">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                        <input type="text" placeholder="Search logs..." 
                               class="pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent w-full sm:w-80 transition-all duration-300" />
                    </div>
                    
                    <select class="px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-300 bg-white">
                        <option value="">All Levels</option>
                        <option value="critical">🔴 Critical</option>
                        <option value="error">🟠 Error</option>
                        <option value="warning">🟡 Warning</option>
                        <option value="info">🔵 Info</option>
                    </select>

                    <select class="px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-300 bg-white">
                        <option value="">All Servers</option>
                        @foreach($servers as $server)
                            <option value="{{ $server->id }}">🖥️ {{ $server->name }}</option>
                        @endforeach
                    </select>
                </div>

                <div class="flex items-center space-x-3">
                    <div class="flex items-center space-x-2 text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-lg">
                        <i class="fas fa-clock text-gray-400"></i>
                        <span>Last updated: <strong id="last-updated">{{ now()->format('H:i:s') }}</strong></span>
                    </div>
                    <button class="px-4 py-3 bg-gradient-to-r from-primary-600 to-primary-700 text-white rounded-xl hover:from-primary-700 hover:to-primary-800 transition-all duration-300 flex items-center space-x-2 shadow-lg hover:shadow-xl transform hover:scale-105">
                        <i class="fas fa-sync-alt"></i>
                        <span>Refresh</span>
                    </button>
                    <button class="px-4 py-3 bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 rounded-xl hover:from-gray-200 hover:to-gray-300 transition-all duration-300 flex items-center space-x-2 shadow-sm hover:shadow-md transform hover:scale-105">
                        <i class="fas fa-download"></i>
                        <span>Export</span>
                    </button>
                </div>
            </div>
        </div>

        <!-- Logs Table -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden fade-in-up" style="animation-delay: 0.5s">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                    <i class="fas fa-list-alt text-primary-600 mr-2"></i>
                    System Logs
                </h3>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Timestamp</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Level</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Server</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Message</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">                        @forelse($logs as $log)
                            <tr class="modern-table-row">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <div class="flex flex-col">
                                        <span class="font-semibold">{{ $log->created_at ? $log->created_at->format('M d, Y') : 'N/A' }}</span>
                                        <span class="text-gray-500 text-xs">{{ $log->created_at ? $log->created_at->format('H:i:s') : '' }}</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if($log->level == 'critical')
                                        <span class="level-badge inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-red-100 to-red-200 text-red-800 border border-red-300">
                                            <i class="fas fa-exclamation-triangle mr-1 pulse-animation"></i>
                                            Critical
                                        </span>
                                    @elseif($log->level == 'error')
                                        <span class="level-badge inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-red-100 to-red-200 text-red-800 border border-red-300">
                                            <i class="fas fa-times-circle mr-1"></i>
                                            Error
                                        </span>
                                    @elseif($log->level == 'warning')
                                        <span class="level-badge inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-yellow-100 to-yellow-200 text-yellow-800 border border-yellow-300">
                                            <i class="fas fa-exclamation-circle mr-1"></i>
                                            Warning
                                        </span>
                                    @elseif($log->level == 'info')
                                        <span class="level-badge inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-blue-100 to-blue-200 text-blue-800 border border-blue-300">
                                            <i class="fas fa-info-circle mr-1"></i>
                                            Info
                                        </span>
                                    @else
                                        <span class="level-badge inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gradient-to-r from-gray-100 to-gray-200 text-gray-800 border border-gray-300">
                                            <i class="fas fa-circle mr-1"></i>
                                            {{ ucfirst($log->level ?? 'Unknown') }}
                                        </span>
                                    @endif
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-3 h-3 bg-gradient-to-r from-green-400 to-green-600 rounded-full mr-3 pulse-animation"></div>
                                        <div class="flex flex-col">
                                            <span class="text-sm font-semibold text-gray-900">{{ $log->server ? $log->server->name : 'Unknown' }}</span>
                                            <span class="text-xs text-gray-500">{{ $log->server ? $log->server->ip_address : '' }}</span>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-sm text-gray-900 max-w-xs lg:max-w-md">
                                        <div class="bg-gray-50 rounded-lg p-3 border-l-4 border-primary-500">
                                            {{ Str::limit($log->message, 100) }}
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <a href="{{ route('logs.show', $log->id) }}" 
                                       class="inline-flex items-center px-3 py-2 bg-gradient-to-r from-primary-600 to-primary-700 text-white rounded-lg hover:from-primary-700 hover:to-primary-800 transition-all duration-300 transform hover:scale-105 shadow-sm hover:shadow-md">
                                        <i class="fas fa-eye mr-2"></i>
                                        View Details
                                    </a>
                                </td>
                            </tr>
                        @empty
                            <tr>
                                <td colspan="5" class="px-6 py-16 text-center">
                                    <div class="flex flex-col items-center">
                                        <div class="w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-full flex items-center justify-center mb-4">
                                            <i class="fas fa-inbox text-gray-400 text-2xl"></i>
                                        </div>
                                        <h3 class="text-lg font-semibold text-gray-900 mb-2">No logs found</h3>
                                        <p class="text-gray-500 mb-4">Start monitoring your servers to see logs here.</p>
                                        <button class="px-4 py-2 bg-gradient-to-r from-primary-600 to-primary-700 text-white rounded-lg hover:from-primary-700 hover:to-primary-800 transition-all duration-300 transform hover:scale-105">
                                            <i class="fas fa-plus mr-2"></i>
                                            Start Monitoring
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if($logs->hasPages())
                <div class="px-6 py-4 border-t border-gray-200">
                    {{ $logs->links() }}
                </div>
            @endif
        </div>
    </main>    <!-- Auto-refresh functionality -->
    <script>
        let isRefreshing = false;
        let refreshInterval;

        // Auto-refresh every 30 seconds
        function startAutoRefresh() {
            refreshInterval = setInterval(function() {
                if (document.hidden || isRefreshing) return; // Don't refresh if tab is not active or already refreshing
                
                updateLastRefreshTime();
                
                // Add visual indicator of refresh
                const refreshBtn = document.querySelector('button:has(.fa-sync-alt)');
                if (refreshBtn && !isRefreshing) {
                    performRefresh(refreshBtn);
                }
            }, 30000);
        }

        function performRefresh(refreshBtn) {
            if (isRefreshing) return;
            
            isRefreshing = true;
            const originalContent = refreshBtn.innerHTML;
            refreshBtn.innerHTML = '<i class="fas fa-sync-alt animate-spin"></i> <span>Refreshing...</span>';
            refreshBtn.disabled = true;
            refreshBtn.classList.add('opacity-75');
            
            // Show loading skeletons
            showLoadingSkeletons();
            
            setTimeout(() => {
                location.reload();
            }, 1500);
        }

        function showLoadingSkeletons() {
            const tableRows = document.querySelectorAll('tbody tr:not(:last-child)');
            tableRows.forEach(row => {
                const cells = row.querySelectorAll('td');
                cells.forEach(cell => {
                    if (!cell.querySelector('.loading-skeleton')) {
                        const content = cell.innerHTML;
                        cell.innerHTML = `<div class="loading-skeleton h-4 rounded w-3/4"></div>`;
                        cell.setAttribute('data-original-content', content);
                    }
                });
            });
        }

        function updateLastRefreshTime() {
            const lastUpdatedElement = document.getElementById('last-updated');
            if (lastUpdatedElement) {
                const now = new Date();
                lastUpdatedElement.textContent = now.toLocaleTimeString();
            }
        }

        // Enhanced animations and interactive features
        document.addEventListener('DOMContentLoaded', function() {
            // Staggered animation for table rows
            const rows = document.querySelectorAll('tbody tr');
            rows.forEach((row, index) => {
                row.style.animationDelay = `${index * 0.05}s`;
                row.classList.add('fade-in-up');
            });

            // Enhanced refresh button functionality
            const refreshBtn = document.querySelector('button:has(.fa-sync-alt)');
            if (refreshBtn) {
                refreshBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    performRefresh(this);
                });
            }

            // Real-time search functionality with debouncing
            let searchTimeout;
            const searchInput = document.querySelector('input[placeholder="Search logs..."]');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        const filter = this.value.toLowerCase();
                        const rows = document.querySelectorAll('tbody tr:not(:last-child)');
                        let visibleCount = 0;
                        
                        rows.forEach(row => {
                            const text = row.textContent.toLowerCase();
                            const isVisible = text.includes(filter);
                            row.style.display = isVisible ? '' : 'none';
                            if (isVisible) visibleCount++;
                        });

                        // Show/hide empty state
                        const emptyRow = document.querySelector('tbody tr:last-child');
                        if (emptyRow && emptyRow.querySelector('td[colspan]')) {
                            emptyRow.style.display = visibleCount === 0 ? '' : 'none';
                        }
                    }, 300);
                });

                // Add search animations
                searchInput.addEventListener('focus', function() {
                    this.parentElement.classList.add('ring-2', 'ring-primary-500');
                });

                searchInput.addEventListener('blur', function() {
                    this.parentElement.classList.remove('ring-2', 'ring-primary-500');
                });
            }

            // Enhanced filter functionality
            const levelSelect = document.querySelector('select option[value="critical"]')?.parentElement;
            const serverSelect = document.querySelector('select option[value=""]')?.parentElement;
            
            [levelSelect, serverSelect].forEach(select => {
                if (select) {
                    select.addEventListener('change', function() {
                        const levelFilter = levelSelect?.value || '';
                        const serverFilter = serverSelect?.value || '';
                        
                        const rows = document.querySelectorAll('tbody tr:not(:last-child)');
                        let visibleCount = 0;
                        
                        rows.forEach(row => {
                            let showRow = true;
                            
                            // Level filter
                            if (levelFilter) {
                                const levelBadge = row.querySelector('.level-badge');
                                const levelText = levelBadge?.textContent.toLowerCase().trim();
                                showRow = showRow && levelText?.includes(levelFilter);
                            }
                            
                            // Server filter (would need server ID in row data)
                            if (serverFilter) {
                                // Implementation depends on server data in rows
                            }
                            
                            row.style.display = showRow ? '' : 'none';
                            if (showRow) visibleCount++;
                        });

                        // Update empty state
                        const emptyRow = document.querySelector('tbody tr:last-child');
                        if (emptyRow && emptyRow.querySelector('td[colspan]')) {
                            emptyRow.style.display = visibleCount === 0 ? '' : 'none';
                        }
                    });
                }
            });

            // Add hover effects for cards
            const cards = document.querySelectorAll('.card-hover');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Add click animations for buttons
            const buttons = document.querySelectorAll('button, a[class*="bg-"]');
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    // Create ripple effect
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.cssText = `
                        position: absolute;
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s linear;
                        background-color: rgba(255, 255, 255, 0.5);
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        pointer-events: none;
                    `;
                    
                    this.style.position = 'relative';
                    this.style.overflow = 'hidden';
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });

            // Start auto-refresh
            startAutoRefresh();
            updateLastRefreshTime();
        });

        // Add CSS for ripple animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);

        // Notification system
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            const icons = {
                info: 'fa-info-circle',
                success: 'fa-check-circle',
                warning: 'fa-exclamation-triangle',
                error: 'fa-times-circle'
            };
            const colors = {
                info: 'from-blue-500 to-blue-600',
                success: 'from-green-500 to-green-600',
                warning: 'from-yellow-500 to-yellow-600',
                error: 'from-red-500 to-red-600'
            };
            
            notification.className = `fixed top-4 right-4 bg-gradient-to-r ${colors[type]} text-white px-6 py-4 rounded-xl shadow-lg z-50 fade-in-up transform transition-all duration-300`;
            notification.innerHTML = `
                <div class="flex items-center space-x-3">
                    <i class="fas ${icons[type]} text-lg"></i>
                    <span class="font-medium">${message}</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-2 text-white hover:text-gray-200">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.style.transform = 'translateX(100%)';
                    notification.style.opacity = '0';
                    setTimeout(() => notification.remove(), 300);
                }
            }, 5000);        }

        // Cleanup on page unload
        window.addEventListener('beforeunload', function() {
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }
        });
    </script>
</div>
@endsection